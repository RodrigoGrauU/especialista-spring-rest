spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#propriedade para criar tabela automaticamente a partir da inicialização da aplicação
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create

#necessário para gerar o DDL (deve-se comentar o generate-ddl=true)
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#Necessário para informar o Flyway sobre a pasta testdata
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#exibe o sql utilizado
spring.jpa.show-sql=true
#necessário para ageração do hibernate utilizar o innoDB com Engine
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#ativando falha para propriedades desconhecidas
spring.jackson.deserialization.fail-on-unknown-properties=true

#ativando falha para propriedades ignoradas (jsonignore)
spring.jackson.deserialization.fail-on-ignored-properties=true

#necessário caso não tenha um handler
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#ativa o snake case
#spring.jackson.property-naming-strategy=SNAKE_CASE

#define tamanho padrão do arquivo enviado
#spring.servlet.multipart.max-file-size=20KB
#define tamanho da request
#spring.servlet.multipart.max-request-size=20MB

#definindo propriedade para armazenamento local das fotos
algafood.storage.local.diretorio-fotos=/home/grauu/Documents/catalogo

spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password=
algafood.email.remetente=AlgaFood <naoresponder@algafood.com.br>

#Para tratar a virgula na formatacao, e definada a configuracao do locale no FreeMarker
spring.freemarker.settings.locale=pt_BR

#fake - utiliza a implementacao que nao envia email de verdade
#algafood.email.impl=fake

#fake - utiliza a implementacao que envia e-mail para um e-mail especifico
algafood.email.impl=fake
algafood.email.sandbox.destinatario=

#ativa a compressao com GZIP (acima de 2Kb)
server.compression.enabled=true

#utilizado pelo loggly. Ideal e utilizar variaveis de ambiente
#logging.loggly.token=seu_customer_token_aqui


#configuracao usuario e password padrao spring security
spring.security.user.name=algafood
spring.security.user.password=123456

#logging.level.org.springframework=DEBUG

#oauth2
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem
